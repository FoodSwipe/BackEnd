# Generated by Django 3.1.4 on 2023-04-10 10:56

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import item.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('item_group', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='ItemType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('badge', models.ImageField(help_text='Add badge image for this type of item.', upload_to=item.models.upload_menu_type_badge_to, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg', 'gif', 'bmp', 'tiff', 'JPG', 'webp'])])),
                ('timestamp', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Item Type',
                'verbose_name_plural': 'Item Types',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True, help_text='Add features, specialities or uniqueness about the item.', max_length=512, null=True)),
                ('price', models.DecimalField(decimal_places=2, help_text='in Rupees', max_digits=8)),
                ('is_available', models.BooleanField(default=True, verbose_name='Is available on store?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to=item.models.upload_menu_item_media_to, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg', 'gif', 'bmp', 'tiff', 'JPG', 'webp'])])),
                ('ingredients', models.CharField(max_length=512, null=True)),
                ('scale', models.IntegerField(default=1, help_text='Scale for price i.e. how much (pcs/ml) on this price?')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='in grams for regular item and ml for bar item', max_digits=8, null=True)),
                ('calorie', models.DecimalField(blank=True, decimal_places=2, help_text='in kCal', max_digits=8, null=True)),
                ('is_veg', models.BooleanField(default=False, verbose_name='Is vegetarian item?')),
                ('is_bar_item', models.BooleanField(default=False)),
                ('bar_size', models.CharField(blank=True, choices=[('Quarter', 'Quarter'), ('Half', 'Half'), ('Full', 'Full')], max_length=8, null=True)),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='MenuItemCreator', to=settings.AUTH_USER_MODEL)),
                ('item_type', models.ManyToManyField(blank=True, help_text='You can select multiple item types.', related_name='item_types', to='item.ItemType')),
                ('menu_item_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='menu_items', to='item_group.menuitemgroup')),
                ('updated_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='MenuItemModifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Menu Item',
                'verbose_name_plural': 'Menu Items',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='TopAndRecommendedItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('top', models.BooleanField(default=False)),
                ('recommended', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('menu_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='special', to='item.menuitem')),
            ],
            options={
                'verbose_name': 'Top and Recommended Item',
                'verbose_name_plural': 'Top and Recommended Items',
                'ordering': ['-timestamp'],
            },
        ),
    ]
